{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validator.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","form小ontrol","Textarea","props","restProps","Input","creatField","type","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","s","dialog","to","activeClassName","active","Message","message","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/6.0eb5a697.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form小ontrol\":\"FormsControls_form小ontrol__3jf2f\",\"error\":\"FormsControls_error__26PjI\",\"formSammaryError\":\"FormsControls_formSammaryError__3Z6PT\"};","import { Field } from 'redux-form'\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n  const hasError = touched && error\r\n  return (\r\n    <div className={styles.form小ontrol + ' ' + (hasError ? styles.error : '')}>\r\n      {children}\r\n      {hasError && <p>{error}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const creatField = (type, placeholder, name, validators, component, text) => (\r\n  <div>\r\n    <Field \r\n      type={type} \r\n      placeholder={placeholder} \r\n      name={name} \r\n      component={component} \r\n      validate={validators}\r\n      text={text}\r\n       /> {text}\r\n  </div>\r\n)","export const required = value => {\r\n  if (value) return undefined\r\n  return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n  return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__15hAk\",\"dialogsItems\":\"Dialogs_dialogsItems__2B1bT\",\"dialog\":\"Dialogs_dialog__2Cr88\",\"active\":\"Dialogs_active__7s9eN\",\"messages\":\"Dialogs_messages__3H2QX\",\"message\":\"Dialogs_message__1wFg2\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = `/dialogs/${props.id}`;\r\n  return (\r\n    <div className={`${s.dialog}`}>\r\n      <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validator';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  const state = props.dialogsPage\r\n\r\n  let dialogsElements = state.dialogs.map((dialog) => (\r\n    <DialogItem key={dialog.id} id={dialog.id} name={dialog.name} />\r\n  ));\r\n  let messagesElements = state.messages.map((message) => (\r\n    <Message key={message.id} message={message.message} />\r\n  ));\r\n  // const newMessageBody = state.newMessageBody\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field \r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n          name=\"newMessageBody\" \r\n          placeholder=\"Enter your message\" />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  const ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n  return ConnectedRedirectComponent\r\n}","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}