{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validator.js","components/Login/Login.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","form小ontrol","Textarea","props","restProps","Input","creatField","type","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","formSammaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,mBAAc,wCAAmC,MAAQ,6BAA6B,iBAAmB,0C,6LCErHC,EAAc,SAAC,GAAwD,EAAvDC,MAAwD,IAAD,IAAhDC,KAAOC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAQC,EAAwB,EAAxBA,SAC7CC,GADqE,2CAC1DH,GAAWC,GAC5B,OACE,sBAAKG,UAAWC,IAAOC,iBAAc,KAAOH,EAAWE,IAAOJ,MAAQ,IAAtE,UACGC,EACAC,GAAY,4BAAIF,QAKVM,EAAW,SAACC,GAAW,IAC3BV,EAA6BU,EAA7BV,MAAgBW,GAAaD,EAAtBT,KADmB,YACGS,EADH,mBAEjC,OAAO,cAACX,EAAD,2BAAiBW,GAAjB,aAAwB,oDAAcV,GAAWW,QAG7CC,EAAQ,SAACF,GAAW,IACxBV,EAA6BU,EAA7BV,MAAgBW,GAAaD,EAAtBT,KADgB,YACMS,EADN,mBAE9B,OAAO,cAACX,EAAD,2BAAiBW,GAAjB,aAAwB,iDAAWV,GAAWW,QAG1CE,EAAa,SAACC,EAAMC,EAAaC,EAAMC,EAAYC,EAAWC,GAAjD,OACxB,gCACE,cAAC,IAAD,CACEL,KAAMA,EACNC,YAAaA,EACbC,KAAMA,EACNE,UAAWA,EACXE,SAAUH,EACVE,KAAMA,IAPV,IAQSA,O,iCChCX,oEAAO,IAAME,EAAW,SAAAC,GACtB,IAAIA,EACJ,MAAO,qBAIIC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC9C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCPhC,sFA0BME,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAjBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAc1B,EAAW,EAAXA,MAChC,OACM,uBAAM2B,SAAUD,EAAhB,UACGhB,YAAW,OAAQ,QAAS,QAAS,CAACQ,KAAWT,KACjDC,YAAW,WAAY,WAAY,WAAY,CAACQ,KAAWT,KAC3DC,YAAW,WAAY,KAAM,aAAc,GAAID,IAAO,eAEtDT,GAAS,qBAAKG,UAAWC,IAAOwB,iBAAvB,SACP5B,IAEH,8BACE,mDA4BG6B,uBAHS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,UAEmB,CAACE,WAA1BJ,EApBD,SAACtB,GAKb,OAAIA,EAAMwB,OACD,cAAC,IAAD,CAAUG,GAAI,aAIrB,gCACE,uCACA,cAACX,EAAD,CAAgBI,SAXH,SAACQ,GAChB5B,EAAM0B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.0d43d6bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form小ontrol\":\"FormsControls_form小ontrol__3jf2f\",\"error\":\"FormsControls_error__26PjI\",\"formSammaryError\":\"FormsControls_formSammaryError__3Z6PT\"};","import { Field } from 'redux-form'\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n  const hasError = touched && error\r\n  return (\r\n    <div className={styles.form小ontrol + ' ' + (hasError ? styles.error : '')}>\r\n      {children}\r\n      {hasError && <p>{error}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const creatField = (type, placeholder, name, validators, component, text) => (\r\n  <div>\r\n    <Field \r\n      type={type} \r\n      placeholder={placeholder} \r\n      name={name} \r\n      component={component} \r\n      validate={validators}\r\n      text={text}\r\n       /> {text}\r\n  </div>\r\n)","export const required = value => {\r\n  if (value) return undefined\r\n  return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n  return undefined\r\n}","import { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { login } from \"../../redux/auth-reducer\"\r\nimport { required } from \"../../utils/validators/validator\"\r\nimport { creatField, Input } from \"../common/FormsControls/FormsControls\"\r\nimport styles from \"../common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n        <form onSubmit={handleSubmit}>\r\n          {creatField('text', 'Email', 'email', [required], Input)}\r\n          {creatField('password', 'Password', 'password', [required], Input)}\r\n          {creatField('checkbox', null, 'rememberMe', [], Input, 'remember Me')}\r\n\r\n          {error && <div className={styles.formSammaryError}>\r\n            {error}\r\n          </div>}\r\n          <div>\r\n            <button>Login</button>\r\n          </div>\r\n        </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n  \r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'} />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>LOGIN</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login)"],"sourceRoot":""}